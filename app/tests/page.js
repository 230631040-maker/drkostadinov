'use client'

// Route: /tests
// –°—Ç—Ä–∞–Ω–∏—Ü–∞: "–¢–µ—Å—Ç–æ–≤–µ –∏ –∏–∑—Å–ª–µ–¥–≤–∞–Ω–∏—è"
// –ò–∑–∏—Å–∫–≤–∞–Ω–∏—è: 2 –≥–ª–∞–≤–Ω–∏ –ø–æ–¥–º–µ–Ω—é—Ç–∞ (–î–µ—Ü–∞, –í—ä–∑—Ä–∞—Å—Ç–Ω–∏) -> –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–°—Ç—Ä–µ—Å, –ê–≥—Ä–µ—Å–∏—è, ...)
// –°–ø–∞–∑–µ–Ω–∏ —Ü–≤–µ—Ç–æ–≤–µ –æ—Ç –•–†–û–ù–û–õ–û–ì–ò–Ø.txt: #000E18, #212845, #D6628D, #D6ED17, #39A0B0, #8CFFFB, #DBB91E, #F16C48
// –ò–∫–æ–Ω–∏: lucide-react (—Å —Ä–µ–∑–µ—Ä–≤–Ω–∏ emoji –ø—Ä–∏ –Ω—É–∂–¥–∞)

import React from 'react'
import { useMemo, useState } from 'react'
import {
  Baby,
  User,
  Users,
  Brain,
  Activity,
  AlertTriangle,
  GraduationCap,
  Puzzle,
  Heart,
  BookOpen,
  ClipboardList,
  Search,
  Hourglass
} from 'lucide-react'

// –¶–≤–µ—Ç–æ–≤–∞ –ø–∞–ª–∏—Ç—Ä–∞ (–∞—Ä–±–∏—Ç—Ä–∞—Ä–Ω–∏ Tailwind —Ü–≤–µ—Ç–æ–≤–µ)
const COLORS = {
  bg: '#000E18', // —Ç—ä–º–µ–Ω —Ñ–æ–Ω
  card: '#212845', // —Ç—ä–º–Ω–∞ –∫–∞—Ä—Ç–∞/–ø–∞–Ω–µ–ª
  accent1: '#D6628D', // —Ä–æ–∑–æ–≤ –∞–∫—Ü–µ–Ω—Ç
  accent2: '#D6ED17', // –ª–∞–π–º –∞–∫—Ü–µ–Ω—Ç
  accent3: '#39A0B0', // —Ç–∏–π–ª –∞–∫—Ü–µ–Ω—Ç
  accentWarm: '#F16C48', // —Ç–æ–ø—ä–ª –∞–∫—Ü–µ–Ω—Ç (CTA)
  text: '#FFFFFF',
  textMuted: '#8CFFFB'
}

// –î–æ–º–µ–π–Ω–∏/–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
const DOMAINS = [
  { key: 'stress', label: '–°—Ç—Ä–µ—Å', icon: Activity },
  { key: 'aggression', label: '–ê–≥—Ä–µ—Å–∏—è', icon: AlertTriangle },
  { key: 'anxiety', label: '–¢—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç', icon: Brain },
  { key: 'depression', label: '–î–µ–ø—Ä–µ—Å–∏—è', icon: Heart },
  { key: 'adhd', label: 'ADHD', icon: Brain },
  { key: 'asd', label: '–ê—É—Ç–∏–∑—ä–º / ASD', icon: Puzzle },
  { key: 'cognitive', label: '–ö–æ–≥–Ω–∏—Ç–∏–≤–Ω–∏', icon: Brain },
  { key: 'personality', label: '–õ–∏—á–Ω–æ—Å—Ç', icon: User },
  { key: 'family', label: '–°–µ–º–µ–π–Ω–∏/–í—Ä—ä–∑–∫–∏', icon: Users },
  { key: 'school', label: '–£—á–∏–ª–∏—â–Ω–∞ –∞–¥–∞–ø—Ç–∞—Ü–∏—è', icon: GraduationCap }
]

// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∏ —Ç–µ—Å—Ç–æ–≤–µ (MVP seed –¥–∞–Ω–Ω–∏; –ø–æ-–∫—ä—Å–Ω–æ –∏–¥–≤–∞—Ç –æ—Ç –ë–î)
const ALL_TESTS = [
  { code: 'PSS-10', name: '–°–∫–∞–ª–∞ –∑–∞ –≤—ä–∑–ø—Ä–∏–µ—Ç —Å—Ç—Ä–µ—Å (PSS-10)', domains: ['stress'], minAge: 18, maxAge: 99, duration: 5, type: '—Å–∞–º–æ–æ—Ü–µ–Ω–∫–∞', languages: ['BG'], delivery: 'paper', scoring: 'auto' },
  { code: 'PSS-C', name: 'PSS ‚Äì –¥–µ—Ç—Å–∫–∞ –≤–µ—Ä—Å–∏—è', domains: ['stress'], minAge: 8, maxAge: 17, duration: 7, type: '—Å–∞–º–æ–æ—Ü–µ–Ω–∫–∞', languages: ['BG'], delivery: 'paper', scoring: 'auto' },
  { code: 'GAD-7', name: '–°–∫–∞–ª–∞ –∑–∞ –≥–µ–Ω–µ—Ä–∞–ª–∏–∑–∏—Ä–∞–Ω–∞ —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç (GAD-7)', domains: ['anxiety'], minAge: 18, maxAge: 99, duration: 3, type: '—Å–∞–º–æ–æ—Ü–µ–Ω–∫–∞', languages: ['BG'], delivery: 'paper', scoring: 'auto' },
  { code: 'SCAS', name: 'Spence Anxiety Scale (SCAS) ‚Äì –¥–µ—Ü–∞', domains: ['anxiety'], minAge: 8, maxAge: 17, duration: 10, type: '—Å–∞–º–æ–æ—Ü–µ–Ω–∫–∞/—Ä–æ–¥–∏—Ç–µ–ª', languages: ['BG'], delivery: 'paper', scoring: 'manual' },
  { code: 'PHQ-9', name: '–î–µ–ø—Ä–µ—Å–∏—è ‚Äì PHQ-9', domains: ['depression'], minAge: 18, maxAge: 99, duration: 3, type: '—Å–∞–º–æ–æ—Ü–µ–Ω–∫–∞', languages: ['BG'], delivery: 'paper', scoring: 'auto' },
  { code: 'CDI-2', name: '–î–µ—Ç—Å–∫–∞ –¥–µ–ø—Ä–µ—Å–∏–≤–Ω–∞ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è (CDI-2)', domains: ['depression'], minAge: 7, maxAge: 17, duration: 10, type: '—Å–∞–º–æ–æ—Ü–µ–Ω–∫–∞', languages: ['BG'], delivery: 'paper', scoring: 'manual' },
  { code: 'BPAQ', name: 'Buss‚ÄìPerry Aggression Questionnaire (BPAQ)', domains: ['aggression'], minAge: 18, maxAge: 99, duration: 10, type: '—Å–∞–º–æ–æ—Ü–µ–Ω–∫–∞', languages: ['BG'], delivery: 'paper', scoring: 'manual' },
  { code: 'RPQ', name: 'Reactive‚ÄìProactive Aggression Questionnaire (RPQ) ‚Äì –¥–µ—Ü–∞', domains: ['aggression'], minAge: 8, maxAge: 17, duration: 10, type: '—Å–∞–º–æ–æ—Ü–µ–Ω–∫–∞', languages: ['BG'], delivery: 'paper', scoring: 'manual' },
  { code: 'ASRS', name: 'Adult ADHD Self-Report Scale (ASRS v1.1)', domains: ['adhd'], minAge: 18, maxAge: 99, duration: 5, type: '—Å–∞–º–æ–æ—Ü–µ–Ω–∫–∞', languages: ['BG'], delivery: 'paper', scoring: 'auto' },
  { code: 'Conners-3', name: 'Conners 3 ‚Äì —Ä–æ–¥–∏—Ç–µ–ª/—É—á–∏—Ç–µ–ª', domains: ['adhd'], minAge: 8, maxAge: 17, duration: 20, type: '–∏–Ω—Ñ–æ—Ä–º–∞–Ω—Ç', languages: ['BG'], delivery: 'paper', scoring: 'manual' },
  { code: 'AQ-10', name: 'Autism Spectrum Quotient (AQ-10) ‚Äì –≤—ä–∑—Ä–∞—Å—Ç–Ω–∏', domains: ['asd'], minAge: 18, maxAge: 99, duration: 3, type: '—Å–∞–º–æ–æ—Ü–µ–Ω–∫–∞', languages: ['BG'], delivery: 'paper', scoring: 'auto' },
  { code: 'CARS-2', name: 'Childhood Autism Rating Scale (CARS-2)', domains: ['asd'], minAge: 2, maxAge: 17, duration: 20, type: '–∫–ª–∏–Ω–∏—Ü–∏—Å—Ç', languages: ['BG'], delivery: 'paper', scoring: 'manual' },
  { code: 'MoCA', name: ' Montreal Cognitive Assessment (MoCA)', domains: ['cognitive'], minAge: 18, maxAge: 99, duration: 10, type: '–∫–ª–∏–Ω–∏—Ü–∏—Å—Ç', languages: ['BG'], delivery: 'paper', scoring: 'manual' },
  { code: 'WISC-V', name: 'WISC-V ‚Äì –∏–Ω—Ç–µ–ª–µ–∫—Ç (–¥–µ—Ü–∞)', domains: ['cognitive'], minAge: 6, maxAge: 16, duration: 60, type: '–∫–ª–∏–Ω–∏—Ü–∏—Å—Ç', languages: ['BG'], delivery: 'paper', scoring: 'manual' },
  { code: 'BFI-2', name: 'Big Five Inventory (BFI-2)', domains: ['personality'], minAge: 18, maxAge: 99, duration: 10, type: '—Å–∞–º–æ–æ—Ü–µ–Ω–∫–∞', languages: ['BG'], delivery: 'paper', scoring: 'manual' },
  { code: 'SDQ', name: 'Strengths & Difficulties Questionnaire (SDQ) ‚Äì –¥–µ—Ü–∞', domains: ['personality'], minAge: 4, maxAge: 17, duration: 5, type: '—Ä–æ–¥–∏—Ç–µ–ª/—É—á–∏—Ç–µ–ª', languages: ['BG'], delivery: 'paper', scoring: 'manual' },
  { code: 'FAD', name: 'Family Assessment Device (FAD)', domains: ['family'], minAge: 12, maxAge: 99, duration: 15, type: '—Å–∞–º–æ–æ—Ü–µ–Ω–∫–∞', languages: ['BG'], delivery: 'paper', scoring: 'manual' },
  { code: 'SAS-SR', name: 'Social Adjustment Scale ‚Äì Self Report (SAS-SR)', domains: ['school'], minAge: 18, maxAge: 99, duration: 15, type: '—Å–∞–º–æ–æ—Ü–µ–Ω–∫–∞', languages: ['BG'], delivery: 'paper', scoring: 'manual' }
]

function Tab({ active, onClick, icon: Icon, children }) {
  return (
    <button
      onClick={onClick}
      className={`flex items-center gap-2 px-4 py-2 rounded-2xl border transition-all shadow-md ${
        active
          ? 'bg-[' + COLORS.accent2 + '] text-black border-transparent'
          : 'bg-[' + COLORS.card + '] text-white border-[' + COLORS.accent3 + '] hover:opacity-90'
      }`}
      style={{ borderColor: COLORS.accent3 }}
      aria-pressed={active}
    >
      {Icon ? <Icon className="h-5 w-5" /> : null}
      <span className="font-semibold">{children}</span>
    </button>
  )
}

function DomainChip({ active, onClick, icon: Icon, label }) {
  return (
    <button
      onClick={onClick}
      className={`group flex items-center gap-2 px-3 py-2 rounded-xl border text-sm transition-all ${
        active
          ? 'bg-[' + COLORS.accent1 + '] text-white border-transparent'
          : 'bg-[' + COLORS.card + '] text-white border-[' + COLORS.accent3 + '] hover:bg-[' + COLORS.accent3 + '] hover:text-black'
      }`}
      style={{ borderColor: COLORS.accent3 }}
    >
      {Icon ? <Icon className="h-4 w-4" /> : <span>üß™</span>}
      <span>{label}</span>
    </button>
  )
}

function Badge({ children }) {
  return (
    <span
      className="inline-flex items-center gap-1 rounded-md px-2 py-1 text-xs"
      style={{ backgroundColor: COLORS.card, color: COLORS.textMuted }}
    >
      {children}
    </span>
  )
}

function TestCard({ test }) {
  return (
    <div
      className="rounded-2xl p-4 shadow-md border hover:shadow-lg transition-all flex flex-col"
      style={{ backgroundColor: COLORS.card, borderColor: COLORS.accent3 }}
    >
      <div className="flex items-start justify-between gap-3">
        <div>
          <h3 className="text-lg font-semibold text-white">{test.name}</h3>
          <p className="text-sm" style={{ color: COLORS.textMuted }}>{test.code}</p>
        </div>
        <BookOpen className="h-6 w-6" style={{ color: COLORS.accent2 }} />
      </div>

      <div className="mt-3 flex flex-wrap gap-2">
        <Badge><Users className="h-3 w-3" /> {test.minAge}‚Äì{test.maxAge}</Badge>
        <Badge><Hourglass className="h-3 w-3" /> ~{test.duration} –º–∏–Ω</Badge>
        <Badge><ClipboardList className="h-3 w-3" /> {test.type}</Badge>
      </div>

      <div className="mt-4 flex gap-2">
        <button
          className="px-3 py-2 rounded-lg font-medium"
          style={{ backgroundColor: COLORS.accentWarm, color: 'white' }}
        >
          –°—Ç–∞—Ä—Ç–∏—Ä–∞–π
        </button>
        <button
          className="px-3 py-2 rounded-lg font-medium border"
          style={{ backgroundColor: 'transparent', color: 'white', borderColor: COLORS.accent3 }}
        >
          –®–∞–±–ª–æ–Ω–∏
        </button>
        <button
          className="px-3 py-2 rounded-lg font-medium border"
          style={{ backgroundColor: 'transparent', color: 'white', borderColor: COLORS.accent3 }}
        >
          –°–∫–æ—Ä–∏–Ω–≥
        </button>
      </div>
    </div>
  )
}

export default function TestsPage() {
  const [ageTab, setAgeTab] = useState('adults') // 'children' | 'adults'
  const [domain, setDomain] = useState('stress')
  const [q, setQ] = useState('')

  const filtered = useMemo(() => {
    const min = ageTab === 'children' ? 0 : 18
    const max = ageTab === 'children' ? 17 : 150
    return ALL_TESTS.filter(t =>
      t.minAge <= max && t.maxAge >= min &&
      (domain ? t.domains.includes(domain) : true) &&
      (q ? (t.name.toLowerCase().includes(q.toLowerCase()) || t.code.toLowerCase().includes(q.toLowerCase())) : true)
    )
  }, [ageTab, domain, q])

  return (
    <div className="min-h-screen" style={{ backgroundColor: COLORS.bg }}>
      <div className="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 py-8">
        {/* –ó–∞–≥–ª–∞–≤–∏–µ */}
        <div className="flex items-center justify-between gap-4">
          <div>
            <h1 className="text-2xl md:text-3xl font-bold" style={{ color: COLORS.text }}>
              –¢–µ—Å—Ç–æ–≤–µ –∏ –∏–∑—Å–ª–µ–¥–≤–∞–Ω–∏—è
            </h1>
            <p className="mt-1 text-sm" style={{ color: COLORS.textMuted }}>
              –ò–∑–±–µ—Ä–µ—Ç–µ –≤—ä–∑—Ä–∞—Å—Ç–æ–≤–∞ –≥—Ä—É–ø–∞ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è. –í —Å–ø–∏—Å—ä–∫–∞ —â–µ –≤–∏–¥–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏ —Ç–µ—Å—Ç–æ–≤–µ.
            </p>
          </div>
        </div>

        {/* –¢–∞–±–æ–≤–µ: –î–µ—Ü–∞ / –í—ä–∑—Ä–∞—Å—Ç–Ω–∏ */}
        <div className="mt-6 flex items-center gap-3">
          <Tab active={ageTab === 'children'} onClick={() => setAgeTab('children')} icon={Baby}>–î–µ—Ü–∞ (0‚Äì17)</Tab>
          <Tab active={ageTab === 'adults'} onClick={() => setAgeTab('adults')} icon={User}>–í—ä–∑—Ä–∞—Å—Ç–Ω–∏ (18+)</Tab>
        </div>

        {/* –¢—ä—Ä—Å–µ–Ω–µ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
        <div className="mt-6 grid grid-cols-1 lg:grid-cols-12 gap-6">
          {/* –õ—è–≤–∞ –∫–æ–ª–æ–Ω–∞: –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
          <aside className="lg:col-span-4 xl:col-span-3">
            <div className="p-4 rounded-2xl border" style={{ backgroundColor: COLORS.card, borderColor: COLORS.accent3 }}>
              <h2 className="text-base font-semibold mb-3" style={{ color: COLORS.text }}>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</h2>
              <div className="flex flex-wrap gap-2">
                {DOMAINS.map(d => (
                  <DomainChip key={d.key} active={domain === d.key} onClick={() => setDomain(d.key)} icon={d.icon} label={d.label} />
                ))}
              </div>
            </div>
          </aside>

          {/* –î—è—Å–Ω–∞ –∫–æ–ª–æ–Ω–∞: —Ç—ä—Ä—Å–µ–Ω–µ + —Ä–µ–∑—É–ª—Ç–∞—Ç–∏ */}
          <main className="lg:col-span-8 xl:col-span-9">
            <div className="flex items-center gap-2">
              <div className="relative flex-1">
                <Search className="absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4" style={{ color: COLORS.textMuted }} />
                <input
                  value={q}
                  onChange={(e) => setQ(e.target.value)}
                  placeholder="–¢—ä—Ä—Å–µ–Ω–µ –ø–æ –∏–º–µ –∏–ª–∏ –∫–æ–¥ (–Ω–∞–ø—Ä. PSS)"
                  className="w-full pl-9 pr-3 py-2 rounded-xl border bg-transparent outline-none"
                  style={{ color: COLORS.text, borderColor: COLORS.accent3 }}
                />
              </div>
            </div>

            <div className="mt-4 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-2 xl:grid-cols-3 gap-4">
              {filtered.map(t => (
                <TestCard key={t.code} test={t} />
              ))}
              {filtered.length === 0 && (
                <div className="col-span-full text-center p-10 rounded-2xl border" style={{ backgroundColor: COLORS.card, borderColor: COLORS.accent3 }}>
                  <p style={{ color: COLORS.textMuted }}>–ù—è–º–∞ –Ω–∞–º–µ—Ä–µ–Ω–∏ —Ç–µ—Å—Ç–æ–≤–µ –ø–æ —Ç–µ–∫—É—â–∏—Ç–µ —Ñ–∏–ª—Ç—Ä–∏.</p>
                </div>
              )}
            </div>
          </main>
        </div>
      </div>
    </div>
  )
}
